[1mdiff --git a/admin/app/actions/category.actions.ts b/admin/app/actions/category.actions.ts[m
[1mindex 5399961..7462ecc 100644[m
[1m--- a/admin/app/actions/category.actions.ts[m
[1m+++ b/admin/app/actions/category.actions.ts[m
[36m@@ -3,12 +3,31 @@[m
 import { prisma } from "@/lib/db";[m
 import { revalidatePath } from "next/cache";[m
 import { deleteImage } from "@/lib/cloudinary";[m
[31m-import { uploadImage } from "@/lib/uploadImage";[m
[32m+[m[32mimport { v2 as cloudinary } from "cloudinary";[m
[32m+[m
[32m+[m[32m// Configure Cloudinary[m
[32m+[m[32mcloudinary.config({[m
[32m+[m[32m  cloud_name: process.env.CLOUDINARY_CLOUD_NAME,[m
[32m+[m[32m  api_key: process.env.CLOUDINARY_API_KEY,[m
[32m+[m[32m  api_secret: process.env.CLOUDINARY_API_SECRET,[m
[32m+[m[32m});[m
 [m
 export async function createCategory(data: { name: string; image: File }) {[m
   try {[m
[32m+[m[32m    // Convert File to base64 for Cloudinary[m
[32m+[m[32m    const bytes = await data.image.arrayBuffer();[m
[32m+[m[32m    const buffer = Buffer.from(bytes);[m
[32m+[m[32m    const base64Image = `data:${data.image.type};base64,${buffer.toString('base64')}`;[m
[32m+[m[41m    [m
     // Upload image to Cloudinary[m
[31m-    const imageResult = await uploadImage(data.image);[m
[32m+[m[32m    const imageResult = await cloudinary.uploader.upload(base64Image, {[m
[32m+[m[32m      folder: "e-commerce/categories",[m
[32m+[m[32m      resource_type: "image",[m
[32m+[m[32m      transformation: [[m
[32m+[m[32m        { width: 400, height: 300, crop: "fill" },[m
[32m+[m[32m        { quality: "auto" }[m
[32m+[m[32m      ][m
[32m+[m[32m    });[m
 [m
     // Create category in database[m
     const category = await prisma.category.create({[m
[36m@@ -17,7 +36,7 @@[m [mexport async function createCategory(data: { name: string; image: File }) {[m
         slug: data.name.toLowerCase().replace(/\s+/g, "-"),[m
         images: [[m
           {[m
[31m-            url: imageResult.url,[m
[32m+[m[32m            url: imageResult.secure_url,[m
             public_id: imageResult.public_id,[m
           },[m
         ],[m
[36m@@ -59,13 +78,26 @@[m [mexport async function updateCategory([m
 [m
     // If new image is provided, upload it and delete old one[m
     if (data.image) {[m
[31m-      const imageResult = await uploadImage(data.image);[m
[32m+[m[32m      // Convert File to base64 for Cloudinary[m
[32m+[m[32m      const bytes = await data.image.arrayBuffer();[m
[32m+[m[32m      const buffer = Buffer.from(bytes);[m
[32m+[m[32m      const base64Image = `data:${data.image.type};base64,${buffer.toString('base64')}`;[m
[32m+[m[41m      [m
[32m+[m[32m      const imageResult = await cloudinary.uploader.upload(base64Image, {[m
[32m+[m[32m        folder: "e-commerce/categories",[m
[32m+[m[32m        resource_type: "image",[m
[32m+[m[32m        transformation: [[m
[32m+[m[32m          { width: 400, height: 300, crop: "fill" },[m
[32m+[m[32m          { quality: "auto" }[m
[32m+[m[32m        ][m
[32m+[m[32m      });[m
[32m+[m[41m      [m
       if (data.oldImagePublicId) {[m
         await deleteImage(data.oldImagePublicId);[m
       }[m
       imageData = [[m
         {[m
[31m-          url: imageResult.url,[m
[32m+[m[32m          url: imageResult.secure_url,[m
           public_id: imageResult.public_id,[m
         },[m
       ];[m
[1mdiff --git a/admin/next.config.mjs b/admin/next.config.mjs[m
[1mindex c3b4565..8519d4e 100644[m
[1m--- a/admin/next.config.mjs[m
[1m+++ b/admin/next.config.mjs[m
[36m@@ -22,6 +22,11 @@[m [mconst nextConfig = {[m
   eslint: {[m
     ignoreDuringBuilds: true,[m
   },[m
[32m+[m[32m  experimental: {[m
[32m+[m[32m    serverActions: {[m
[32m+[m[32m      bodySizeLimit: '10mb'[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
 };[m
 [m
 export default nextConfig;[m
[1mdiff --git a/admin/next.config.ts b/admin/next.config.ts[m
[1mindex 2363bd7..3b542d7 100644[m
[1m--- a/admin/next.config.ts[m
[1m+++ b/admin/next.config.ts[m
[36m@@ -13,6 +13,11 @@[m [mconst nextConfig: NextConfig = {[m
   },[m
   // Add output configuration for standalone mode[m
   output: "standalone",[m
[32m+[m[32m  experimental: {[m
[32m+[m[32m    serverActions: {[m
[32m+[m[32m      bodySizeLimit: '10mb'[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
 };[m
 [m
 export default nextConfig;[m
